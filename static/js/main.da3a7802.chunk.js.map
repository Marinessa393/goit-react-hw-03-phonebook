{"version":3,"sources":["components/ContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","onChange","Component","ContactListItem","onClickRemove","onClick","ContactList","filteredContacts","onRemove","length","map","id","Filter","onChangeFilter","target","propTypes","PropTypes","string","isRequired","func","defaultProps","App","contacts","filter","addContact","data","find","el","toLowerCase","alert","newContact","uuidv4","handleChangeFilter","getFilteredContacts","contact","includes","handleRemove","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da3a7802.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form__label\">\r\n          <h3 className=\"form__title\">Name</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <h3 className=\"form__title\">Phone</h3>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"form__btn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","export default function ContactListItem({ name, number, onClickRemove }) {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className=\"ContactList__btn\"\r\n        onClick={onClickRemove}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ filteredContacts, onRemove }) => {\r\n  return (\r\n    filteredContacts.length > 0 && (\r\n      <ul className=\"ContactList\">\r\n        {filteredContacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onClickRemove={() => onRemove(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClickRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className=\"Filter\">\r\n      <p className=\"form__title \">Find Contacts By Name</p>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = data => {\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(el => data.name.toLowerCase() === el.name.toLowerCase())\n    ) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      const newContact = {\n        id: uuidv4(),\n        name: data.name,\n        number: data.number,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, newContact],\n      }));\n    }\n  };\n\n  handleChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handleRemove = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <div className=\"Container\">\n          <section title=\"Phonebook\" className=\"Phonebook__section\">\n            <h1 className=\"Phonebook__title\">Phonebook</h1>\n            <ContactForm contacts={contacts} onSubmit={this.addContact} />\n          </section>\n          <section title=\"Contacts\" className=\"Contacts\">\n            <h2 className=\"Contacts__title\">Contacts</h2>\n            <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\n            <ContactList\n              filteredContacts={this.getFilteredContacts()}\n              onRemove={this.handleRemove}\n            />\n          </section>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}